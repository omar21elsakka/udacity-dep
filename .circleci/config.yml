version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '16.15.1'       
      - eb/setup
      - aws-cli/setup  
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install        
      - run:
          name: Install Back-End Dependencies
          command: |
            npm run backend:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
      - run:
          name: set-env-variables
          command: cd udagram-api && eb init udagram-api && eb use udagram-api-dev && eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID   AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION   AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY  POSTGRES_HOST=$POSTGRES_HOST  POSTGRES_USERNAME=$POSTGRES_USERNAME  POSTGRES_DB=$POSTGRES_DB  POSTGRES_PASSWORD=$POSTGRES_PASSWORD  PORT=$PORT  POSTGRES_PORT=$POSTGRES_PORT  JWT_SECRET=$JWT_SECRET && cd ..
      - run:
          name: Deploy App
          command: |
            npm run deploy
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Deploy App
          # TODO: Install, build, deploy in both apps
          command: |
            echo "# TODO: Install, build, deploy in both apps"
            
workflows:
  udagram:
    jobs:
      - build :
        filters:
          branches:
            only:
              - master